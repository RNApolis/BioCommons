package pl.poznan.put.constant;

import java.awt.Color;

public final class Colors {
    // @formatter:off
    //#####  Color Palette by Paletton.com
    //#####  Palette URL: http://paletton.com/#uid=7000u0kllllaFw0g0qFqFg0w0aF
    //
    //
    //*** Primary color:
    //
    //   shade 0 = #AA3939 = rgb(170, 57, 57) = rgba(170, 57, 57,1)
    //   shade 1 = #FFAAAA = rgb(255,170,170) = rgba(255,170,170,1)
    //   shade 2 = #D46A6A = rgb(212,106,106) = rgba(212,106,106,1)
    //   shade 3 = #801515 = rgb(128, 21, 21) = rgba(128, 21, 21,1)
    //   shade 4 = #550000 = rgb( 85,  0,  0) = rgba( 85,  0,  0,1)
    //
    //*** Secondary color (1):
    //
    //   shade 0 = #AA6C39 = rgb(170,108, 57) = rgba(170,108, 57,1)
    //   shade 1 = #FFD1AA = rgb(255,209,170) = rgba(255,209,170,1)
    //   shade 2 = #D49A6A = rgb(212,154,106) = rgba(212,154,106,1)
    //   shade 3 = #804515 = rgb(128, 69, 21) = rgba(128, 69, 21,1)
    //   shade 4 = #552700 = rgb( 85, 39,  0) = rgba( 85, 39,  0,1)
    //
    //*** Secondary color (2):
    //
    //   shade 0 = #226666 = rgb( 34,102,102) = rgba( 34,102,102,1)
    //   shade 1 = #669999 = rgb(102,153,153) = rgba(102,153,153,1)
    //   shade 2 = #407F7F = rgb( 64,127,127) = rgba( 64,127,127,1)
    //   shade 3 = #0D4D4D = rgb( 13, 77, 77) = rgba( 13, 77, 77,1)
    //   shade 4 = #003333 = rgb(  0, 51, 51) = rgba(  0, 51, 51,1)
    //
    //*** Complement color:
    //
    //   shade 0 = #2D882D = rgb( 45,136, 45) = rgba( 45,136, 45,1)
    //   shade 1 = #88CC88 = rgb(136,204,136) = rgba(136,204,136,1)
    //   shade 2 = #55AA55 = rgb( 85,170, 85) = rgba( 85,170, 85,1)
    //   shade 3 = #116611 = rgb( 17,102, 17) = rgba( 17,102, 17,1)
    //   shade 4 = #004400 = rgb(  0, 68,  0) = rgba(  0, 68,  0,1)
    //
    //
    //#####  Generated by Paletton.com (c) 2002-2014
     // @formatter:on

    public static final String[] COLORS_HEX = new String[] { "#AA3939", "#AA6C39", "#226666", "#2D882D", "#FFAAAA", "#FFD1AA", "#669999", "#88CC88", "#D46A6A", "#D49A6A", "#407F7F", "#55AA55", "#801515", "#804515", "#0D4D4D", "#116611", "#550000", "#552700", "#003333", "#004400" };
    public static final Color[] COLORS = new Color[Colors.COLORS_HEX.length];

    static {
        for (int i = 0; i < Colors.COLORS_HEX.length; i++) {
            Colors.COLORS[i] = Color.decode(Colors.COLORS_HEX[i]);
        }
    }

    private static final float[] GREEN_HSB = Color.RGBtoHSB(17, 102, 17, null);
    private static final float[] RED_HSB = Color.RGBtoHSB(170, 57, 57, null);

    public static Color interpolateColor(double value, double min, double max) {
        double v = value;

        if (v < min) {
            v = min;
        }

        if (v > max) {
            v = max;
        }

        double ratio = (v - min) / (max - min);
        double h = ratio * (RED_HSB[0] - GREEN_HSB[0]) + GREEN_HSB[0];
        double s = ratio * (RED_HSB[1] - GREEN_HSB[1]) + GREEN_HSB[1];
        double b = ratio * (RED_HSB[2] - GREEN_HSB[2]) + GREEN_HSB[2];
        return Color.getHSBColor((float) h, (float) s, (float) b);
    }

    private Colors() {
    }
}
